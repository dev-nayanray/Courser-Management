University Course Management System - MVC Design Overview

1. Model
---------
- Represents the core data and business logic.
- Includes classes such as Person (abstract), Student, Teacher, Course, Department, Enrollment.
- Encapsulates data attributes and provides getters/setters.
- Handles data validation and relationships (e.g., students enrolled in courses).
- Interacts with the database via DatabaseHelper for CRUD operations.

2. View
--------
- Responsible for the graphical user interface (GUI).
- Implemented using Java Swing components.
- Includes panels such as LoginPanel, StudentRegistrationPanel, TeacherRegistrationPanel, CourseRegistrationPanel, EnrollmentPanel, MarksPanel, AdminHeaderPanel, AdminFooterPanel.
- Displays forms, tables, buttons, and other UI elements.
- Uses UIStyleUtil for consistent styling and modern look.
- Captures user input and displays data from the model.

3. Controller
--------------
- Acts as an intermediary between Model and View.
- Handles user actions from the View and updates the Model accordingly.
- Includes controllers like LoginController, StudentController, TeacherController, CourseController, EnrollmentController, MarksController.
- Implements event listeners for buttons and other UI components.
- Performs business logic, validation, and database operations via DatabaseHelper.
- Updates the View based on changes in the Model.

4. Data Flow
-------------
- User interacts with the View (e.g., submits a form).
- Controller captures the event, validates input, and updates the Model.
- Model updates data and persists changes to the database.
- Controller retrieves updated data from the Model.
- View refreshes UI components to reflect the latest data.

5. Benefits of MVC in this Project
-----------------------------------
- Separation of concerns improves maintainability and scalability.
- Enables independent development and testing of components.
- Facilitates UI updates without affecting business logic.
- Enhances code organization and readability.

This overview summarizes the MVC design pattern implementation in the University Course Management System project.
