University Course Management System - Development Plan and Design

1. Project Overview
-------------------
This project is a Java Swing-based University Course Management System designed to automate course registration, teacher assignment, student enrollment, and marks management. It applies core Object-Oriented Programming (OOP) principles such as abstraction, encapsulation, inheritance, polymorphism, and composition.

2. Development Plan
-------------------
Phase 1: Requirements Analysis and Design
- Understand project requirements and define core classes (Person, Student, Teacher, Course, Department, Enrollment).
- Design class relationships and data flow.
- Plan GUI layout and navigation.

Phase 2: Core Class Implementation
- Implement domain classes with attributes and methods.
- Ensure proper encapsulation and inheritance.

Phase 3: GUI Development
- Develop panels for Login, Student, Teacher, Course, Enrollment, and Marks.
- Apply consistent styling using UIStyleUtil.
- Implement navigation with JTabbedPane and header/footer panels.

Phase 4: Controller and Database Integration
- Implement controllers to handle user interactions and business logic.
- Integrate SQLite database using JDBC for persistent storage.
- Implement dynamic data loading and updating in UI components.

Phase 5: Testing and Refinement
- Perform unit and integration testing.
- Refine UI for usability and aesthetics.
- Fix bugs and optimize performance.

3. Wireframe Description
-------------------------
- Header Panel: Displays system title and logout button.
- Navigation Tabs: Login, Students, Teachers, Courses, Departments, Enrollment, Marks.
- Student Panel: Form to add students, list of students, course registration.
- Teacher Panel: Add teachers, assign courses.
- Course Panel: Add courses, view course list, manage enrolled students.
- Enrollment Panel: Manage student enrollments.
- Marks Panel: Assign marks, generate reports.
- Footer Panel: Displays copyright and info.

4. Key Algorithms
------------------
a) Course Registration
- Input course details and teacher.
- Add selected students to course.
- Validate inputs and save to database.
- Update course list UI.

b) Student Registration
- Input student details.
- Register student to selected courses.
- Validate and save data.

c) Marks Assignment
- Select course and student.
- Input marks for assessment types.
- Validate marks range.
- Save marks to database.
- Generate grade reports with GPA calculation.

5. OOP Concepts Applied
------------------------
- Abstraction: Person base class with abstract methods.
- Encapsulation: Private fields with getters/setters.
- Inheritance: Student and Teacher extend Person.
- Polymorphism: Overridden methods for specific behaviors.
- Composition: Course contains Enrollment objects linking students and courses.

This document serves as a comprehensive guide for the development and understanding of the University Course Management System project.
